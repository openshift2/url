name: 'aws_hosted_labels'
description: 'Modify labels, sending jobs to self-hosted runners'

inputs:
  use_self_hosted_runners_override:
    required: false
    default:

outputs:
  labelmatrix:
    value: ${{ steps.computelabels.outputs.labelmatrix }}
runs:
  using: "composite"
  steps:
    - name: Compute labels
      id: computelabels
      shell: bash
      run: |

        if [ $use_self_hosted_runners_override = "true" ]; then
            use_self_hosted_runners="true"
        elif [ $use_self_hosted_runners_override = "false" ]; then
            use_self_hosted_runners="false"
        else
            checkweb=$(curl --connect-timeout 3 https://gha.cpp.al/use_self_hosted_runners.txt) || true
            if [ $checkweb = "true" ]; then
                use_self_hosted_runners="true"
            elif [ $checkweb = "false" ]; then
                use_self_hosted_runners="false"
            else
                # the default
                use_self_hosted_runners="true"
            fi
        fi

        supported_images_linux="ubuntu-latest"
        for i in {14..44}
        do
          new_image="ubuntu-${i}.04"
          supported_images_linux="${supported_images_linux} ${new_image}"
          new_image="ubuntu-${i}.10"
          supported_images_linux="${supported_images_linux} ${new_image}"
        done

        supported_images_windows="windows-latest"
        for i in {14..44}
        do
          new_image="windows-20${i}"
          supported_images_windows="${supported_images_windows} ${new_image}"
        done

        supported_images_macos="macos-latest"
        for i in {11..44}
        do
          new_image="macos-${i}"
          supported_images_macos="${supported_images_macos} ${new_image}"
        done

        labelmatrix="{ "

        if [ ${use_self_hosted_runners} = "true" ]; then
          for image in ${supported_images_linux}; do 
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"self-hosted\", \"linux\", \"x64\", \"${image}-aws\" ], " 
          done
          for image in ${supported_images_windows}; do 
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"self-hosted\", \"windows\", \"x64\", \"${image}-aws\" ], " 
          done
          # Note: macos is not using "self-hosted" currently:
          for image in ${supported_images_macos}; do
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"${image}\" ], "
          done
        else
          for image in ${supported_images_linux}; do
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"${image}\" ], "
          done
          for image in ${supported_images_windows}; do
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"${image}\" ], "
          done
          for image in ${supported_images_macos}; do
            # basicimage=$( echo "$image" | sed -e 's/[-.]/_/g' )
            basicimage=${image}
            labelmatrix="$labelmatrix \"${basicimage}\": [ \"${image}\" ], "
          done
        fi

        labelmatrix=$( echo "$labelmatrix" | sed 's/,\s*$//' )
        labelmatrix="$labelmatrix }"
        echo "labelmatrix=$labelmatrix" >> $GITHUB_OUTPUT
        echo "$labelmatrix"
